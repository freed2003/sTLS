class TLS13ServerHelloParser:
    def __init__(self, data):
        self.data = data
        self.pointer = 0

    def read_bytes(self, length):
        result = self.data[self.pointer:self.pointer + length]
        self.pointer += length
        return result

    
    def parse(self):
        server_hello = {}
        server_hello['type'] = self.read_bytes(1).hex()
        server_hello['legacy_version'] = self.read_bytes(2).hex()
        server_hello['length'] = self.read_bytes(2).hex()
        server_hello['handshake_header'] = self.read_bytes(4).hex()
        server_hello['server_version'] = self.read_bytes(2).hex()
        server_hello['random'] = self.read_bytes(32).hex()
        server_hello['legacy_session_id_echo_length'] = int.from_bytes(self.read_bytes(1), 'big')
        server_hello['legacy_session_id_echo'] = self.read_bytes(server_hello['legacy_session_id_echo_length']).hex()
        server_hello['cipher_suite'] = self.read_bytes(2).hex()
        server_hello['legacy_compression_method'] = self.read_bytes(1).hex()
        
        extensions_length = int.from_bytes(self.read_bytes(2), 'big')
        server_hello['extensions'] = self.parse_extensions(extensions_length)
        
        return server_hello

    def parse_extensions(self, length):
        extensions = []
        end = self.pointer + length
        while self.pointer < end:
            extension = {}
            extension['type'] = self.read_bytes(2).hex()
            extension_length = int.from_bytes(self.read_bytes(2), 'big')
            extension['data'] = self.read_bytes(extension_length).hex()
            extensions.append(extension)
        return extensions

# Example usage:
# Assuming `data` is the byte stream of the ServerHello message
# data = b'...' 
# parser = TLS13ServerHelloParser(data)
# server_hello_message = parser.parse()
# print(server_hello_message)


# Example usage:
# Assuming `data` is the byte stream of the ServerHello message
# data = b'...' 
data = ""
data = bytes.fromhex(data)
parser = TLS13ServerHelloParser(data)
server_hello_message = parser.parse()
print(server_hello_message)
